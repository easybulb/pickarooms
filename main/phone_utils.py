"""
Phone Number Utilities for PickARooms
Handles normalization and validation for Twilio E.164 format
"""

import re
import logging

logger = logging.getLogger('main')

# Comprehensive list of country codes
COUNTRY_CODES = [
    ('+44', 'ğŸ‡¬ğŸ‡§ United Kingdom (+44)'),
    ('+1', 'ğŸ‡ºğŸ‡¸ United States (+1)'),
    ('+1', 'ğŸ‡¨ğŸ‡¦ Canada (+1)'),
    ('+91', 'ğŸ‡®ğŸ‡³ India (+91)'),
    ('+234', 'ğŸ‡³ğŸ‡¬ Nigeria (+234)'),
    ('+86', 'ğŸ‡¨ğŸ‡³ China (+86)'),
    ('+33', 'ğŸ‡«ğŸ‡· France (+33)'),
    ('+49', 'ğŸ‡©ğŸ‡ª Germany (+49)'),
    ('+81', 'ğŸ‡¯ğŸ‡µ Japan (+81)'),
    ('+61', 'ğŸ‡¦ğŸ‡º Australia (+61)'),
    ('+55', 'ğŸ‡§ğŸ‡· Brazil (+55)'),
    ('+7', 'ğŸ‡·ğŸ‡º Russia (+7)'),
    ('+82', 'ğŸ‡°ğŸ‡· South Korea (+82)'),
    ('+34', 'ğŸ‡ªğŸ‡¸ Spain (+34)'),
    ('+39', 'ğŸ‡®ğŸ‡¹ Italy (+39)'),
    ('+52', 'ğŸ‡²ğŸ‡½ Mexico (+52)'),
    ('+62', 'ğŸ‡®ğŸ‡© Indonesia (+62)'),
    ('+90', 'ğŸ‡¹ğŸ‡· Turkey (+90)'),
    ('+31', 'ğŸ‡³ğŸ‡± Netherlands (+31)'),
    ('+966', 'ğŸ‡¸ğŸ‡¦ Saudi Arabia (+966)'),
    ('+41', 'ğŸ‡¨ğŸ‡­ Switzerland (+41)'),
    ('+27', 'ğŸ‡¿ğŸ‡¦ South Africa (+27)'),
    ('+20', 'ğŸ‡ªğŸ‡¬ Egypt (+20)'),
    ('+48', 'ğŸ‡µğŸ‡± Poland (+48)'),
    ('+66', 'ğŸ‡¹ğŸ‡­ Thailand (+66)'),
    ('+65', 'ğŸ‡¸ğŸ‡¬ Singapore (+65)'),
    ('+60', 'ğŸ‡²ğŸ‡¾ Malaysia (+60)'),
    ('+63', 'ğŸ‡µğŸ‡­ Philippines (+63)'),
    ('+84', 'ğŸ‡»ğŸ‡³ Vietnam (+84)'),
    ('+92', 'ğŸ‡µğŸ‡° Pakistan (+92)'),
    ('+880', 'ğŸ‡§ğŸ‡© Bangladesh (+880)'),
    ('+98', 'ğŸ‡®ğŸ‡· Iran (+98)'),
    ('+353', 'ğŸ‡®ğŸ‡ª Ireland (+353)'),
    ('+64', 'ğŸ‡³ğŸ‡¿ New Zealand (+64)'),
    ('+351', 'ğŸ‡µğŸ‡¹ Portugal (+351)'),
    ('+30', 'ğŸ‡¬ğŸ‡· Greece (+30)'),
    ('+32', 'ğŸ‡§ğŸ‡ª Belgium (+32)'),
    ('+420', 'ğŸ‡¨ğŸ‡¿ Czech Republic (+420)'),
    ('+40', 'ğŸ‡·ğŸ‡´ Romania (+40)'),
    ('+46', 'ğŸ‡¸ğŸ‡ª Sweden (+46)'),
    ('+43', 'ğŸ‡¦ğŸ‡¹ Austria (+43)'),
    ('+45', 'ğŸ‡©ï¿½ï¿½ Denmark (+45)'),
    ('+358', 'ğŸ‡«ğŸ‡® Finland (+358)'),
    ('+47', 'ğŸ‡³ğŸ‡´ Norway (+47)'),
    ('+36', 'ğŸ‡­ğŸ‡º Hungary (+36)'),
    ('+971', 'ğŸ‡¦ğŸ‡ª UAE (+971)'),
    ('+974', 'ğŸ‡¶ğŸ‡¦ Qatar (+974)'),
    ('+965', 'ğŸ‡°ğŸ‡¼ Kuwait (+965)'),
    ('+962', 'ğŸ‡¯ğŸ‡´ Jordan (+962)'),
    ('+961', 'ğŸ‡±ğŸ‡§ Lebanon (+961)'),
    ('+254', 'ğŸ‡°ğŸ‡ª Kenya (+254)'),
    ('+233', 'ğŸ‡¬ğŸ‡­ Ghana (+233)'),
    ('+256', 'ğŸ‡ºğŸ‡¬ Uganda (+256)'),
    ('+255', 'ğŸ‡¹ğŸ‡¿ Tanzania (+255)'),
    ('+216', 'ğŸ‡¹ğŸ‡³ Tunisia (+216)'),
    ('+212', 'ğŸ‡²ğŸ‡¦ Morocco (+212)'),
    ('+213', 'ğŸ‡©ğŸ‡¿ Algeria (+213)'),
    ('+251', 'ğŸ‡ªğŸ‡¹ Ethiopia (+251)'),
    ('+260', 'ğŸ‡¿ğŸ‡² Zambia (+260)'),
    ('+263', 'ğŸ‡¿ğŸ‡¼ Zimbabwe (+263)'),
    ('+244', 'ğŸ‡¦ğŸ‡´ Angola (+244)'),
    ('+258', 'ğŸ‡²ğŸ‡¿ Mozambique (+258)'),
    ('+225', 'ğŸ‡¨ğŸ‡® Ivory Coast (+225)'),
    ('+237', 'ğŸ‡¨ğŸ‡² Cameroon (+237)'),
    ('+242', 'ğŸ‡¨ğŸ‡¬ Congo (+242)'),
    ('+221', 'ğŸ‡¸ğŸ‡³ Senegal (+221)'),
    ('+230', 'ğŸ‡²ğŸ‡º Mauritius (+230)'),
    ('+52', 'ğŸ‡²ğŸ‡½ Mexico (+52)'),
    ('+506', 'ğŸ‡¨ğŸ‡· Costa Rica (+506)'),
    ('+507', 'ğŸ‡µğŸ‡¦ Panama (+507)'),
    ('+51', 'ğŸ‡µğŸ‡ª Peru (+51)'),
    ('+56', 'ğŸ‡¨ğŸ‡± Chile (+56)'),
    ('+57', 'ğŸ‡¨ğŸ‡´ Colombia (+57)'),
    ('+58', 'ğŸ‡»ğŸ‡ª Venezuela (+58)'),
    ('+54', 'ğŸ‡¦ğŸ‡· Argentina (+54)'),
    ('+593', 'ğŸ‡ªğŸ‡¨ Ecuador (+593)'),
    ('+595', 'ğŸ‡µğŸ‡¾ Paraguay (+595)'),
    ('+598', 'ğŸ‡ºğŸ‡¾ Uruguay (+598)'),
    ('+591', 'ğŸ‡§ğŸ‡´ Bolivia (+591)'),
    ('+94', 'ğŸ‡±ğŸ‡° Sri Lanka (+94)'),
    ('+95', 'ğŸ‡²ğŸ‡² Myanmar (+95)'),
    ('+977', 'ğŸ‡³ğŸ‡µ Nepal (+977)'),
    ('+93', 'ğŸ‡¦ğŸ‡« Afghanistan (+93)'),
    ('+996', 'ğŸ‡°ğŸ‡¬ Kyrgyzstan (+996)'),
    ('+992', 'ğŸ‡¹ğŸ‡¯ Tajikistan (+992)'),
    ('+998', 'ğŸ‡ºğŸ‡¿ Uzbekistan (+998)'),
    ('+994', 'ğŸ‡¦ğŸ‡¿ Azerbaijan (+994)'),
    ('+995', 'ğŸ‡¬ğŸ‡ª Georgia (+995)'),
    ('+374', 'ğŸ‡¦ğŸ‡² Armenia (+374)'),
    ('+380', 'ğŸ‡ºğŸ‡¦ Ukraine (+380)'),
    ('+375', 'ğŸ‡§ğŸ‡¾ Belarus (+375)'),
    ('+370', 'ğŸ‡±ğŸ‡¹ Lithuania (+370)'),
    ('+371', 'ğŸ‡±ğŸ‡» Latvia (+371)'),
    ('+372', 'ğŸ‡ªğŸ‡ª Estonia (+372)'),
    ('+373', 'ğŸ‡²ğŸ‡© Moldova (+373)'),
    ('+381', 'ğŸ‡·ğŸ‡¸ Serbia (+381)'),
    ('+385', 'ğŸ‡­ğŸ‡· Croatia (+385)'),
    ('+386', 'ğŸ‡¸ğŸ‡® Slovenia (+386)'),
    ('+387', 'ğŸ‡§ğŸ‡¦ Bosnia (+387)'),
    ('+382', 'ğŸ‡²ğŸ‡ª Montenegro (+382)'),
    ('+383', 'ğŸ‡½ğŸ‡° Kosovo (+383)'),
    ('+389', 'ğŸ‡²ğŸ‡° North Macedonia (+389)'),
    ('+355', 'ğŸ‡¦ğŸ‡± Albania (+355)'),
    ('+359', 'ğŸ‡§ğŸ‡¬ Bulgaria (+359)'),
]


def normalize_phone_to_e164(phone_number, country_code='+44'):
    """
    Normalize phone number to E.164 format for Twilio

    E.164 Format: +[country code][subscriber number]
    - ALWAYS requires + prefix
    - Maximum 15 digits total
    - UK numbers: Remove leading 0 from local format

    Args:
        phone_number (str): Raw phone number from user input
        country_code (str): Country code with + prefix (default +44 for UK)

    Returns:
        str: E.164 formatted number (e.g., +447123456789) or None if invalid

    Examples:
        normalize_phone_to_e164('7123456789', '+44') â†’ '+447123456789'
        normalize_phone_to_e164('07123456789', '+44') â†’ '+447123456789'
        normalize_phone_to_e164('+447123456789', '+44') â†’ '+447123456789'
        normalize_phone_to_e164('9876543210', '+91') â†’ '+919876543210'
        normalize_phone_to_e164('09876543210', '+91') â†’ '+919876543210'
    """
    if not phone_number:
        return None

    # Remove all spaces, dashes, parentheses, dots
    phone = str(phone_number).strip()
    phone = re.sub(r'[\s\-\(\)\.]', '', phone)

    # Already in E.164 format (starts with +)
    if phone.startswith('+'):
        return phone

    # Remove 00 prefix (international dialing format)
    # e.g., 0091 â†’ 91, then we'll add the + prefix
    if phone.startswith('00'):
        return '+' + phone[2:]

    # Remove leading 0 (local dialing format)
    # e.g., UK: 07123456789 â†’ 7123456789
    if phone.startswith('0'):
        phone = phone[1:]

    # Combine country code + cleaned number
    e164_number = f"{country_code}{phone}"

    return e164_number


def validate_phone_number(phone_number):
    """
    Validate phone number format for Twilio E.164

    Rules:
    - Must start with +
    - Must contain only digits after +
    - Must be between 8 and 15 digits (country code + number)
    - Cannot contain letters or special characters

    Args:
        phone_number (str): Phone number to validate

    Returns:
        tuple: (is_valid: bool, error_message: str or None)

    Examples:
        validate_phone_number('+447123456789') â†’ (True, None)
        validate_phone_number('+91987654321') â†’ (True, None)
        validate_phone_number('07123456789') â†’ (False, 'Phone number must start with + and country code')
        validate_phone_number('+44abc123') â†’ (False, 'Phone number contains invalid characters')
        validate_phone_number('+4471234') â†’ (False, 'Phone number is too short')
    """
    if not phone_number:
        return False, "Phone number is required"

    phone = str(phone_number).strip()

    # Must start with +
    if not phone.startswith('+'):
        return False, "Phone number must start with + and country code (e.g., +447123456789)"

    # Remove + for validation
    number_part = phone[1:]

    # Must contain only digits
    if not number_part.isdigit():
        return False, "Phone number contains invalid characters. Only digits allowed after +"

    # Must be between 8 and 15 digits (E.164 standard)
    if len(number_part) < 8:
        return False, "Phone number is too short (minimum 8 digits after country code)"

    if len(number_part) > 15:
        return False, "Phone number is too long (maximum 15 digits total)"

    return True, None


def get_country_codes_for_template():
    """
    Return country codes list formatted for Django template dropdown

    Returns:
        list: List of tuples (country_code, display_name)
    """
    return COUNTRY_CODES
